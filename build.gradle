apply plugin: 'java'
apply plugin: 'maven'

if(project.hasProperty('standalone')) {
    group = 'name.kazennikov'
    description = "tokens"
    version = '0.0.1-SNAPSHOT'
}


repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    antlr3
}

ext.antlr = [
    grammarpackage: "name.kazennikov.annotations",
    antlrSource: 'src/main/antlr3',
    destinationDir: "src/generated-sources/java"
]

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', "${antlr.destinationDir}"]
        }
    }
}

dependencies {
    compile 'net.sf.trove4j:trove4j:3.0.3'
    compile 'com.google.guava:guava:12.0'
    compile 'junit:junit:4.10'
    compile 'org.antlr:antlr:3.4'
    compile 'org.antlr:antlr-runtime:3.4'

    antlr3 'org.antlr:antlr:3.4'

    compile 'org.eclipse.jdt.core.compiler:ecj:4.2.2'
    compile 'uk.ac.gate:gate-core:7.1'

    if(project.hasProperty('standalone')) {
        compile 'name.kazennikov:fsa:0.0.1-SNAPSHOT'
        compile 'name.kazennikov:logger:0.0.1-SNAPSHOT'
    } else {
        compile project(':modules:fsa')
        compile project(':modules:logger')

    }

}




task antlrOutputDir << {
    mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from Antlr3 grammars.'


    inputs.dir file(antlr.antlrSource)
    outputs.dir file(antlr.destinationDir)

    def grammars = fileTree(antlr.antlrSource).include('**/*.g')

    main = 'org.antlr.Tool'
    classpath = configurations.antlr3
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destinationDir}/${pkg}", "-package", grammars.files].flatten()
}

compileJava {
    dependsOn generateGrammarSource
    source antlr.destinationDir
}